<UserControl x:Class="BenchmarkRunner.Controls.BenchmarkTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BenchmarkRunner.Controls"
             xmlns:model="clr-namespace:BenchmarkRunner.Model"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <DockPanel>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="Auto" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="Auto" />
                        <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFinished}" Value="True">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            </Grid.RowDefinitions>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility2"/>
        </Grid.Resources>
        <TreeView Grid.Row="0" Grid.Column="0" Name="trvBenchmarks" ItemsSource="{Binding Nodes}" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" PreviewMouseRightButtonDown="TrvBenchmarks_PreviewMouseRightButtonDown">
            <TreeView.Resources>
                <ContextMenu x:Key="NodeContextMenu">
                    <MenuItem Name="Run" Header="Run" Command="{Binding RunSelectedCommand}">
                        <MenuItem.Icon>
                            <Image Source="/BenchmarkRunner;component/Resources/Run.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="RunDry" Header="Run Once (Dry Run)" Command="{Binding DryRunSelectedCommand}">
                        <MenuItem.Icon>
                            <Image Source="/BenchmarkRunner;component/Resources/RunChecked.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Name="GotoCode" Header="Go To Code" Command="{Binding GoToCodeCommand}">
                        <MenuItem.Icon>
                            <Image Source="/BenchmarkRunner;component/Resources/GoToDeclaration.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
                <HierarchicalDataTemplate DataType="{x:Type model:ProjectBenchmarkTreeNode}" ItemsSource="{Binding Nodes}">
                    <StackPanel Orientation="Horizontal" Margin="0,1">
                        <Image Source="/BenchmarkRunner;component/Resources/Project.png" />
                        <TextBlock Name="txtNodeName" Text="{Binding NodeName}" Margin="1,0,0,0" Padding="2,1,2,1" >
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelectionActive}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock Text="{Binding NodeCountText}" Margin="3,0,0,0" Foreground="#FF595959" />
                        <TextBlock Text="loading..." Margin="3,0,0,0" Foreground="#FF595959" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility}, FallbackValue=Hidden}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:NamespaceBenchmarkTreeNode}" ItemsSource="{Binding Nodes}">
                    <StackPanel Orientation="Horizontal" Margin="0,1">
                        <Image Source="/BenchmarkRunner;component/Resources/Namespace.png" />
                        <TextBlock Name="txtNodeName" Text="{Binding NodeName}" Margin="1,0,0,0" Padding="2,1,2,1" >
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelectionActive}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock Text="{Binding NodeCountText}" Margin="3,0,0,0" Foreground="#FF595959" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:CategoryBenchmarkTreeNode}" ItemsSource="{Binding Nodes}">
                    <StackPanel Orientation="Horizontal" Margin="0,1">
                        <Image Source="/BenchmarkRunner;component/Resources/Category.png" />
                        <TextBlock Name="txtNodeName" Text="{Binding NodeName}" Margin="1,0,0,0" Padding="2,1,2,1" >
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelectionActive}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock Text="{Binding NodeCountText}" Margin="3,0,0,0" Foreground="#FF595959" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:ClassBenchmarkTreeNode}" ItemsSource="{Binding Nodes}">
                    <StackPanel Orientation="Horizontal" Margin="0,1">
                        <Image Source="/BenchmarkRunner;component/Resources/Class.png" />
                        <TextBlock Name="txtNodeName" Text="{Binding NodeName}" Margin="1,0,0,0" Padding="2,1,2,1" >
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelectionActive}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock Text="{Binding NodeCountText}" Margin="3,0,0,0" Foreground="#FF595959" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:MethodBenchmarkTreeNode}" ItemsSource="{Binding Nodes}">
                    <StackPanel Orientation="Horizontal" Margin="0,1">
                        <Image Source="/BenchmarkRunner;component/Resources/Method.png" />
                        <TextBlock x:Name="txtNodeName" Text="{Binding NodeName}" Margin="1,0,0,0" Padding="2,1,2,1" >
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelectionActive}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource _CustomHighlightBrushKey}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <SolidColorBrush x:Key="_CustomHighlightBrushKey" Color="{Binding Source={StaticResource {x:Static SystemColors.HighlightBrushKey}}, Path=Color}" />
                <SolidColorBrush x:Key="_CustomControlBrushKey" Color="{Binding Source={StaticResource {x:Static SystemColors.ControlBrushKey}}, Path=Color}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}"/>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <TextBlock Grid.Row="1" Grid.Column="0" Text="loading..." Foreground="#FF595959" Margin="3,0,0,0" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility2}, FallbackValue=Hidden}" />
        <TextBlock Grid.Row="2" Grid.Column="0" Text="No Benchmarks found in current Solution." Margin="3,0,0,0" Visibility="{Binding IsEmpty, Converter={StaticResource BooleanToVisibility2}, FallbackValue=Hidden}" />
    </Grid>
    </DockPanel>
</UserControl>
